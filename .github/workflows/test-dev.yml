name: CI

on:
  push:
    branches: main
    paths-ignore:
      - '*.md'
  pull_request:
    branches: main
    paths-ignore:
      - '*.md'

jobs:
  release:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, ubuntu-20.04, windows-2019, windows-2022, macos-latest]
        node-version: ['18.17', 18, 20, 22, 23]
        exclude:
          - platform: ubuntu-20.04
            node-version: 23

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - name: Enable REQUIRE_BASIC_FINALIZERS
        run: echo MOCHA_TEST_BASIC_FINALIZERS=1 >> $GITHUB_ENV
        if: matrix.platform == 'ubuntu-latest'
      - run: npm test
      - name: Link the package (POSIX)
        run: sudo npm link
        if: runner.os != 'Windows'
      - name: Link the package (Windows)
        run: npm link
        if: runner.os == 'Windows'
      - name: Check the example
        run: |
          cd example
          npm install
          npm link nobind17
          cp node_modules/node-addon-api/except.gypi .
          npx node-gyp configure build
          node -p "require('./build/Release/hello.node').hello('Garga')"
          npx tsx hello.ts
        shell: bash


  options:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        node-version: [22]
        options:
          - '-DNOBIND_NO_OBJECT_STORE'
          - '-DNOBIND_NO_TYPESCRIPT_GENERATOR'
          - '-DNOBIND_NO_ASYNC_LOCKING'
          - '-DNODE_ADDON_API_REQUIRE_BASIC_FINALIZERS'

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm test
        env:
          CXXFLAGS: ${{ matrix.options }}
  

  asan:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm install
      - run: npm test
        env:
          ENABLE_ASAN: 1
          LSAN_OPTIONS: suppressions=${{ github.workspace }}/test/napi-leaks-suppression.txt
          LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libasan.so.6.0.0
